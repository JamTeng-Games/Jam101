// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(System.Collections.Generic.KeyValuePair<Int32, Int32>))]
  public unsafe class DictionaryEntry_Int32_Int32 : Quantum.Prototypes.DictionaryEntry {
    public Int32 Key;
    public Int32 Value;
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(System.Collections.Generic.KeyValuePair<Int32, FP>))]
  public unsafe class DictionaryEntry_Int32_FP : Quantum.Prototypes.DictionaryEntry {
    public Int32 Key;
    public FP Value;
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(System.Collections.Generic.KeyValuePair<Int32, Variable>))]
  public unsafe class DictionaryEntry_Int32_Variable : Quantum.Prototypes.DictionaryEntry {
    public Int32 Key;
    public Quantum.Prototypes.VariablePrototype Value;
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(System.Collections.Generic.KeyValuePair<PlayerRef, PlayerData>))]
  public unsafe class DictionaryEntry_PlayerRef_PlayerData : Quantum.Prototypes.DictionaryEntry {
    public PlayerRef Key;
    public Quantum.Prototypes.PlayerDataPrototype Value;
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(System.Collections.Generic.KeyValuePair<Int32, SkillModel>))]
  public unsafe class DictionaryEntry_Int32_SkillModel : Quantum.Prototypes.DictionaryEntry {
    public Int32 Key;
    public Quantum.Prototypes.SkillModelPrototype Value;
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(System.Collections.Generic.KeyValuePair<Int32, TimelineModel>))]
  public unsafe class DictionaryEntry_Int32_TimelineModel : Quantum.Prototypes.DictionaryEntry {
    public Int32 Key;
    public Quantum.Prototypes.TimelineModelPrototype Value;
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AOEM_Instance))]
  public unsafe partial class AOEM_InstancePrototype : UnionPrototype {
    public string _field_used_;
    public Quantum.Prototypes.AOEM_test_aoe_1Prototype test_aoe_1;
    public Quantum.Prototypes.AOEM_test_aoe_2Prototype test_aoe_2;
    partial void MaterializeUser(Frame frame, ref Quantum.AOEM_Instance result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.AOEM_Instance result, in PrototypeMaterializationContext context = default) {
        switch (_field_used_) {
          case "TEST_AOE_1": this.test_aoe_1.Materialize(frame, ref *result.test_aoe_1, in context); break;
          case "TEST_AOE_2": this.test_aoe_2.Materialize(frame, ref *result.test_aoe_2, in context); break;
          case "": case null: break;
          default: PrototypeValidator.UnknownUnionField(_field_used_, in context); break;
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AOEM_test_aoe_1))]
  public unsafe partial class AOEM_test_aoe_1Prototype : StructPrototype {
    public Int32 arc;
    partial void MaterializeUser(Frame frame, ref Quantum.AOEM_test_aoe_1 result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.AOEM_test_aoe_1 result, in PrototypeMaterializationContext context = default) {
        result.arc = this.arc;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AOEM_test_aoe_2))]
  public unsafe partial class AOEM_test_aoe_2Prototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.AOEM_test_aoe_2 result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.AOEM_test_aoe_2 result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AddBuffInfo))]
  public unsafe class AddBuffInfoPrototype : StructPrototype {
    public Quantum.Prototypes.BuffModelPrototype buffModel;
    public MapEntityId caster;
    public MapEntityId target;
    public Int32 addStack;
    public Int32 duration;
    public QBoolean isPermanent;
    public QBoolean isDurationSetTo;
    public void Materialize(Frame frame, ref Quantum.AddBuffInfo result, in PrototypeMaterializationContext context = default) {
        this.buffModel.Materialize(frame, ref result.buffModel, in context);
        PrototypeValidator.FindMapEntity(this.caster, in context, out result.caster);
        PrototypeValidator.FindMapEntity(this.target, in context, out result.target);
        result.addStack = this.addStack;
        result.duration = this.duration;
        result.isPermanent = this.isPermanent;
        result.isDurationSetTo = this.isDurationSetTo;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AoeComp))]
  public unsafe class AoeCompPrototype : ComponentPrototype<Quantum.AoeComp> {
    [HideInInspector()]
    public Quantum.Prototypes.AoeModelPrototype Model;
    [HideInInspector()]
    public Int32 ElapsedFrame;
    [HideInInspector()]
    public Int32 RemainFrame;
    [HideInInspector()]
    public Int32 TickTime;
    [HideInInspector()]
    public FP Speed;
    [HideInInspector()]
    public FP Radius;
    [HideInInspector()]
    public FP AngleRad;
    [HideInInspector()]
    public MapEntityId Caster;
    [AllocateOnComponentAdded()]
    [FreeOnComponentRemoved()]
    [HideInInspector()]
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.AoeEntityRecordPrototype[] entityInArea = {};
    [AllocateOnComponentAdded()]
    [FreeOnComponentRemoved()]
    [HideInInspector()]
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.AoeEntityRecordPrototype[] bulletInArea = {};
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.AoeComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.AoeComp result, in PrototypeMaterializationContext context = default) {
        this.Model.Materialize(frame, ref result.Model, in context);
        result.ElapsedFrame = this.ElapsedFrame;
        result.RemainFrame = this.RemainFrame;
        result.TickTime = this.TickTime;
        result.Speed = this.Speed;
        result.Radius = this.Radius;
        result.AngleRad = this.AngleRad;
        PrototypeValidator.FindMapEntity(this.Caster, in context, out result.Caster);
        if (this.entityInArea.Length == 0) {
          result.entityInArea = default;
        } else {
          var list = frame.AllocateList(out result.entityInArea, this.entityInArea.Length);
          for (int i = 0; i < this.entityInArea.Length; ++i) {
            Quantum.AoeEntityRecord tmp = default;
            this.entityInArea[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
        if (this.bulletInArea.Length == 0) {
          result.bulletInArea = default;
        } else {
          var list = frame.AllocateList(out result.bulletInArea, this.bulletInArea.Length);
          for (int i = 0; i < this.bulletInArea.Length; ++i) {
            Quantum.AoeEntityRecord tmp = default;
            this.bulletInArea[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AoeEntityRecord))]
  public unsafe class AoeEntityRecordPrototype : StructPrototype {
    public MapEntityId entity;
    public Int32 tickTime;
    public void Materialize(Frame frame, ref Quantum.AoeEntityRecord result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.entity, in context, out result.entity);
        result.tickTime = this.tickTime;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AoeModel))]
  public unsafe partial class AoeModelPrototype : StructPrototype {
    public Int32 type;
    public FP radius;
    public QBoolean removeOnObstacle;
    public Int32 tickTime;
    public Int32 tweenType;
    [DynamicCollectionAttribute()]
    public Int32[] tags = {};
    public Quantum.Prototypes.AOEM_InstancePrototype instance;
    partial void MaterializeUser(Frame frame, ref Quantum.AoeModel result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.AoeModel result, in PrototypeMaterializationContext context = default) {
        result.type = this.type;
        result.radius = this.radius;
        result.removeOnObstacle = this.removeOnObstacle;
        result.tickTime = this.tickTime;
        result.tweenType = this.tweenType;
        if (this.tags.Length == 0) {
          result.tags = default;
        } else {
          var list = frame.AllocateList(out result.tags, this.tags.Length);
          for (int i = 0; i < this.tags.Length; ++i) {
            Int32 tmp = default;
            tmp = this.tags[i];
            list.Add(tmp);
          }
        }
        this.instance.Materialize(frame, ref result.instance, in context);
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AttribComp))]
  public unsafe partial class AttribCompPrototype : ComponentPrototype<Quantum.AttribComp> {
    [AllocateOnComponentAdded()]
    [FreeOnComponentRemoved()]
    [HideInInspector()]
    [DictionaryAttribute()]
    [DynamicCollectionAttribute()]
    public DictionaryEntry_Int32_Int32[] ValueAttribs = {};
    [AllocateOnComponentAdded()]
    [FreeOnComponentRemoved()]
    [HideInInspector()]
    [DictionaryAttribute()]
    [DynamicCollectionAttribute()]
    public DictionaryEntry_Int32_FP[] PercentAttribs = {};
    partial void MaterializeUser(Frame frame, ref Quantum.AttribComp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.AttribComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.AttribComp result, in PrototypeMaterializationContext context = default) {
        if (this.ValueAttribs.Length == 0) {
          result.ValueAttribs = default;
        } else {
          var dict = frame.AllocateDictionary(out result.ValueAttribs, this.ValueAttribs.Length);
          for (int i = 0; i < this.ValueAttribs.Length; ++i) {
            Int32 tmpKey = default;
            Int32 tmpValue = default;
            tmpKey = this.ValueAttribs[i].Key;
            tmpValue = this.ValueAttribs[i].Value;
            PrototypeValidator.AddToDictionary(dict, tmpKey, tmpValue, in context);
          }
        }
        if (this.PercentAttribs.Length == 0) {
          result.PercentAttribs = default;
        } else {
          var dict = frame.AllocateDictionary(out result.PercentAttribs, this.PercentAttribs.Length);
          for (int i = 0; i < this.PercentAttribs.Length; ++i) {
            Int32 tmpKey = default;
            FP tmpValue = default;
            tmpKey = this.PercentAttribs[i].Key;
            tmpValue = this.PercentAttribs[i].Value;
            PrototypeValidator.AddToDictionary(dict, tmpKey, tmpValue, in context);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AttributeCost))]
  public unsafe partial class AttributeCostPrototype : StructPrototype {
    public Int32 attrType;
    public Int32 cost;
    partial void MaterializeUser(Frame frame, ref Quantum.AttributeCost result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.AttributeCost result, in PrototypeMaterializationContext context = default) {
        result.attrType = this.attrType;
        result.cost = this.cost;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BLTM_Arrow))]
  public unsafe partial class BLTM_ArrowPrototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BLTM_Arrow result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BLTM_Arrow result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BLTM_Instance))]
  public unsafe partial class BLTM_InstancePrototype : UnionPrototype {
    public string _field_used_;
    public Quantum.Prototypes.BLTM_ArrowPrototype Arrow;
    public Quantum.Prototypes.BLTM_PistolBulletPrototype PistolBullet;
    public Quantum.Prototypes.BLTM_test_bullet_1Prototype test_bullet_1;
    partial void MaterializeUser(Frame frame, ref Quantum.BLTM_Instance result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BLTM_Instance result, in PrototypeMaterializationContext context = default) {
        switch (_field_used_) {
          case "ARROW": this.Arrow.Materialize(frame, ref *result.Arrow, in context); break;
          case "PISTOLBULLET": this.PistolBullet.Materialize(frame, ref *result.PistolBullet, in context); break;
          case "TEST_BULLET_1": this.test_bullet_1.Materialize(frame, ref *result.test_bullet_1, in context); break;
          case "": case null: break;
          default: PrototypeValidator.UnknownUnionField(_field_used_, in context); break;
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BLTM_PistolBullet))]
  public unsafe partial class BLTM_PistolBulletPrototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BLTM_PistolBullet result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BLTM_PistolBullet result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BLTM_test_bullet_1))]
  public unsafe partial class BLTM_test_bullet_1Prototype : StructPrototype {
    public FP arg1;
    partial void MaterializeUser(Frame frame, ref Quantum.BLTM_test_bullet_1 result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BLTM_test_bullet_1 result, in PrototypeMaterializationContext context = default) {
        result.arg1 = this.arg1;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_AutoReload))]
  public unsafe partial class BM_AutoReloadPrototype : StructPrototype {
    public Int32 reloadFrame;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_AutoReload result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_AutoReload result, in PrototypeMaterializationContext context = default) {
        result.reloadFrame = this.reloadFrame;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_Dash))]
  public unsafe partial class BM_DashPrototype : StructPrototype {
    public FP distance;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_Dash result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_Dash result, in PrototypeMaterializationContext context = default) {
        result.distance = this.distance;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_DisableMove))]
  public unsafe partial class BM_DisableMovePrototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_DisableMove result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_DisableMove result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_DisableMove_NoEffect))]
  public unsafe partial class BM_DisableMove_NoEffectPrototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_DisableMove_NoEffect result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_DisableMove_NoEffect result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_DisableSkill))]
  public unsafe partial class BM_DisableSkillPrototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_DisableSkill result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_DisableSkill result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_Hot))]
  public unsafe partial class BM_HotPrototype : StructPrototype {
    public Int16 tick;
    public UInt16 area;
    public Int16 damage;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_Hot result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_Hot result, in PrototypeMaterializationContext context = default) {
        result.tick = this.tick;
        result.area = this.area;
        result.damage = this.damage;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_Instance))]
  public unsafe partial class BM_InstancePrototype : UnionPrototype {
    public string _field_used_;
    public Quantum.Prototypes.BM_AutoReloadPrototype AutoReload;
    public Quantum.Prototypes.BM_DashPrototype Dash;
    public Quantum.Prototypes.BM_DisableMovePrototype DisableMove;
    public Quantum.Prototypes.BM_DisableMove_NoEffectPrototype DisableMove_NoEffect;
    public Quantum.Prototypes.BM_DisableSkillPrototype DisableSkill;
    public Quantum.Prototypes.BM_HotPrototype Hot;
    public Quantum.Prototypes.BM_PeterAttribPrototype PeterAttrib;
    public Quantum.Prototypes.BM_PoisonPrototype Poison;
    public Quantum.Prototypes.BM_PureAttribPrototype PureAttrib;
    public Quantum.Prototypes.BM_test_item_1Prototype test_item_1;
    public Quantum.Prototypes.BM_test_item_2Prototype test_item_2;
    public Quantum.Prototypes.BM_test_item_3Prototype test_item_3;
    public Quantum.Prototypes.BM_Test1Prototype Test1;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_Instance result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_Instance result, in PrototypeMaterializationContext context = default) {
        switch (_field_used_) {
          case "AUTORELOAD": this.AutoReload.Materialize(frame, ref *result.AutoReload, in context); break;
          case "DASH": this.Dash.Materialize(frame, ref *result.Dash, in context); break;
          case "DISABLEMOVE": this.DisableMove.Materialize(frame, ref *result.DisableMove, in context); break;
          case "DISABLEMOVE_NOEFFECT": this.DisableMove_NoEffect.Materialize(frame, ref *result.DisableMove_NoEffect, in context); break;
          case "DISABLESKILL": this.DisableSkill.Materialize(frame, ref *result.DisableSkill, in context); break;
          case "HOT": this.Hot.Materialize(frame, ref *result.Hot, in context); break;
          case "PETERATTRIB": this.PeterAttrib.Materialize(frame, ref *result.PeterAttrib, in context); break;
          case "POISON": this.Poison.Materialize(frame, ref *result.Poison, in context); break;
          case "PUREATTRIB": this.PureAttrib.Materialize(frame, ref *result.PureAttrib, in context); break;
          case "TEST_ITEM_1": this.test_item_1.Materialize(frame, ref *result.test_item_1, in context); break;
          case "TEST_ITEM_2": this.test_item_2.Materialize(frame, ref *result.test_item_2, in context); break;
          case "TEST_ITEM_3": this.test_item_3.Materialize(frame, ref *result.test_item_3, in context); break;
          case "TEST1": this.Test1.Materialize(frame, ref *result.Test1, in context); break;
          case "": case null: break;
          default: PrototypeValidator.UnknownUnionField(_field_used_, in context); break;
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_PeterAttrib))]
  public unsafe partial class BM_PeterAttribPrototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_PeterAttrib result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_PeterAttrib result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_Poison))]
  public unsafe partial class BM_PoisonPrototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_Poison result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_Poison result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_PureAttrib))]
  public unsafe partial class BM_PureAttribPrototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_PureAttrib result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_PureAttrib result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_Test1))]
  public unsafe partial class BM_Test1Prototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_Test1 result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_Test1 result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_test_item_1))]
  public unsafe partial class BM_test_item_1Prototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_test_item_1 result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_test_item_1 result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_test_item_2))]
  public unsafe partial class BM_test_item_2Prototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_test_item_2 result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_test_item_2 result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BM_test_item_3))]
  public unsafe partial class BM_test_item_3Prototype : StructPrototype {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BM_test_item_3 result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BM_test_item_3 result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BuffComp))]
  public unsafe class BuffCompPrototype : ComponentPrototype<Quantum.BuffComp> {
    public QBoolean isDirty;
    [AllocateOnComponentAdded()]
    [FreeOnComponentRemoved()]
    [HideInInspector()]
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.BuffObjPrototype[] Buffs = {};
    [AllocateOnComponentAdded()]
    [FreeOnComponentRemoved()]
    [HideInInspector()]
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.AddBuffInfoPrototype[] AddBuffs = {};
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.BuffComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.BuffComp result, in PrototypeMaterializationContext context = default) {
        result.isDirty = this.isDirty;
        if (this.Buffs.Length == 0) {
          result.Buffs = default;
        } else {
          var list = frame.AllocateList(out result.Buffs, this.Buffs.Length);
          for (int i = 0; i < this.Buffs.Length; ++i) {
            Quantum.BuffObj tmp = default;
            this.Buffs[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
        if (this.AddBuffs.Length == 0) {
          result.AddBuffs = default;
        } else {
          var list = frame.AllocateList(out result.AddBuffs, this.AddBuffs.Length);
          for (int i = 0; i < this.AddBuffs.Length; ++i) {
            Quantum.AddBuffInfo tmp = default;
            this.AddBuffs[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BuffModel))]
  public unsafe partial class BuffModelPrototype : StructPrototype {
    public Int32 type;
    public Int32 priority;
    public Int32 maxStack;
    public Int32 interval;
    [DictionaryAttribute()]
    [DynamicCollectionAttribute()]
    public DictionaryEntry_Int32_Int32[] valueAttribs = {};
    [DictionaryAttribute()]
    [DynamicCollectionAttribute()]
    public DictionaryEntry_Int32_FP[] percentAttribs = {};
    [DynamicCollectionAttribute()]
    public Int32[] tags = {};
    public Quantum.Prototypes.BM_InstancePrototype instance;
    partial void MaterializeUser(Frame frame, ref Quantum.BuffModel result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BuffModel result, in PrototypeMaterializationContext context = default) {
        result.type = this.type;
        result.priority = this.priority;
        result.maxStack = this.maxStack;
        result.interval = this.interval;
        if (this.valueAttribs.Length == 0) {
          result.valueAttribs = default;
        } else {
          var dict = frame.AllocateDictionary(out result.valueAttribs, this.valueAttribs.Length);
          for (int i = 0; i < this.valueAttribs.Length; ++i) {
            Int32 tmpKey = default;
            Int32 tmpValue = default;
            tmpKey = this.valueAttribs[i].Key;
            tmpValue = this.valueAttribs[i].Value;
            PrototypeValidator.AddToDictionary(dict, tmpKey, tmpValue, in context);
          }
        }
        if (this.percentAttribs.Length == 0) {
          result.percentAttribs = default;
        } else {
          var dict = frame.AllocateDictionary(out result.percentAttribs, this.percentAttribs.Length);
          for (int i = 0; i < this.percentAttribs.Length; ++i) {
            Int32 tmpKey = default;
            FP tmpValue = default;
            tmpKey = this.percentAttribs[i].Key;
            tmpValue = this.percentAttribs[i].Value;
            PrototypeValidator.AddToDictionary(dict, tmpKey, tmpValue, in context);
          }
        }
        if (this.tags.Length == 0) {
          result.tags = default;
        } else {
          var list = frame.AllocateList(out result.tags, this.tags.Length);
          for (int i = 0; i < this.tags.Length; ++i) {
            Int32 tmp = default;
            tmp = this.tags[i];
            list.Add(tmp);
          }
        }
        this.instance.Materialize(frame, ref result.instance, in context);
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BuffObj))]
  public unsafe class BuffObjPrototype : StructPrototype {
    public Quantum.Prototypes.BuffModelPrototype model;
    public MapEntityId caster;
    public MapEntityId owner;
    public Int32 remainFrame;
    public Int32 stack;
    public Int32 elapsedFrame;
    public Int32 tickTimes;
    public QBoolean isPermanent;
    public void Materialize(Frame frame, ref Quantum.BuffObj result, in PrototypeMaterializationContext context = default) {
        this.model.Materialize(frame, ref result.model, in context);
        PrototypeValidator.FindMapEntity(this.caster, in context, out result.caster);
        PrototypeValidator.FindMapEntity(this.owner, in context, out result.owner);
        result.remainFrame = this.remainFrame;
        result.stack = this.stack;
        result.elapsedFrame = this.elapsedFrame;
        result.tickTimes = this.tickTimes;
        result.isPermanent = this.isPermanent;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BulletComp))]
  public unsafe class BulletCompPrototype : ComponentPrototype<Quantum.BulletComp> {
    [HideInInspector()]
    public Quantum.Prototypes.BulletModelPrototype Model;
    [HideInInspector()]
    public Int32 Hp;
    [HideInInspector()]
    public Int32 ElapsedFrame;
    [HideInInspector()]
    public Int32 RemainFrame;
    [HideInInspector()]
    public Int32 TimeCanHit;
    [HideInInspector()]
    public FP Speed;
    [HideInInspector()]
    public MapEntityId Caster;
    [AllocateOnComponentAdded()]
    [FreeOnComponentRemoved()]
    [HideInInspector()]
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.BulletHitRecordPrototype[] HitRecords = {};
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.BulletComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.BulletComp result, in PrototypeMaterializationContext context = default) {
        this.Model.Materialize(frame, ref result.Model, in context);
        result.Hp = this.Hp;
        result.ElapsedFrame = this.ElapsedFrame;
        result.RemainFrame = this.RemainFrame;
        result.TimeCanHit = this.TimeCanHit;
        result.Speed = this.Speed;
        PrototypeValidator.FindMapEntity(this.Caster, in context, out result.Caster);
        if (this.HitRecords.Length == 0) {
          result.HitRecords = default;
        } else {
          var list = frame.AllocateList(out result.HitRecords, this.HitRecords.Length);
          for (int i = 0; i < this.HitRecords.Length; ++i) {
            Quantum.BulletHitRecord tmp = default;
            this.HitRecords[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BulletHitRecord))]
  public unsafe class BulletHitRecordPrototype : StructPrototype {
    public MapEntityId target;
    public Int32 timeToHitAgain;
    public void Materialize(Frame frame, ref Quantum.BulletHitRecord result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.target, in context, out result.target);
        result.timeToHitAgain = this.timeToHitAgain;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BulletModel))]
  public unsafe partial class BulletModelPrototype : StructPrototype {
    public Int32 type;
    public FP radius;
    public Int32 sameTargetDelayFrame;
    public Int32 moveType;
    public QBoolean removeOnObstacle;
    public QBoolean hitFoe;
    public QBoolean hitAlly;
    public Int32 tweenType;
    public QBoolean useFireAngle;
    [DynamicCollectionAttribute()]
    public Int32[] tags = {};
    public Quantum.Prototypes.BLTM_InstancePrototype instance;
    partial void MaterializeUser(Frame frame, ref Quantum.BulletModel result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.BulletModel result, in PrototypeMaterializationContext context = default) {
        result.type = this.type;
        result.radius = this.radius;
        result.sameTargetDelayFrame = this.sameTargetDelayFrame;
        result.moveType = this.moveType;
        result.removeOnObstacle = this.removeOnObstacle;
        result.hitFoe = this.hitFoe;
        result.hitAlly = this.hitAlly;
        result.tweenType = this.tweenType;
        result.useFireAngle = this.useFireAngle;
        if (this.tags.Length == 0) {
          result.tags = default;
        } else {
          var list = frame.AllocateList(out result.tags, this.tags.Length);
          for (int i = 0; i < this.tags.Length; ++i) {
            Int32 tmp = default;
            tmp = this.tags[i];
            list.Add(tmp);
          }
        }
        this.instance.Materialize(frame, ref result.instance, in context);
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CampComp))]
  public unsafe partial class CampCompPrototype : ComponentPrototype<Quantum.CampComp> {
    [HideInInspector()]
    public Int32 Camp;
    partial void MaterializeUser(Frame frame, ref Quantum.CampComp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CampComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CampComp result, in PrototypeMaterializationContext context = default) {
        result.Camp = this.Camp;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CreateAoeInfo))]
  public unsafe class CreateAoeInfoPrototype : StructPrototype {
    public Quantum.Prototypes.AoeModelPrototype model;
    public Int32 duration;
    public Int32 speed;
    public MapEntityId caster;
    public FPVector2 position;
    public FP angle;
    public void Materialize(Frame frame, ref Quantum.CreateAoeInfo result, in PrototypeMaterializationContext context = default) {
        this.model.Materialize(frame, ref result.model, in context);
        result.duration = this.duration;
        result.speed = this.speed;
        PrototypeValidator.FindMapEntity(this.caster, in context, out result.caster);
        result.position = this.position;
        result.angle = this.angle;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Damage))]
  public unsafe partial class DamagePrototype : StructPrototype {
    public Int32 bullet;
    public Int32 aoe;
    partial void MaterializeUser(Frame frame, ref Quantum.Damage result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.Damage result, in PrototypeMaterializationContext context = default) {
        result.bullet = this.bullet;
        result.aoe = this.aoe;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.DamageInfo))]
  public unsafe class DamageInfoPrototype : StructPrototype {
    public MapEntityId source;
    public MapEntityId target;
    public Quantum.QEnum32<EDamageInfoType> damageType;
    public Quantum.Prototypes.DamagePrototype damage;
    public FP hitRate;
    public FP criticalRate;
    public FP varianceRate;
    public FP angle;
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.AddBuffInfoPrototype[] addBuffs = {};
    public void Materialize(Frame frame, ref Quantum.DamageInfo result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.source, in context, out result.source);
        PrototypeValidator.FindMapEntity(this.target, in context, out result.target);
        result.damageType = this.damageType;
        this.damage.Materialize(frame, ref result.damage, in context);
        result.hitRate = this.hitRate;
        result.criticalRate = this.criticalRate;
        result.varianceRate = this.varianceRate;
        result.angle = this.angle;
        if (this.addBuffs.Length == 0) {
          result.addBuffs = default;
        } else {
          var list = frame.AllocateList(out result.addBuffs, this.addBuffs.Length);
          for (int i = 0; i < this.addBuffs.Length; ++i) {
            Quantum.AddBuffInfo tmp = default;
            this.addBuffs[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.DataContainer))]
  public unsafe partial class DataContainerPrototype : StructPrototype {
    [DictionaryAttribute()]
    [DynamicCollectionAttribute()]
    public DictionaryEntry_Int32_Variable[] Data = {};
    partial void MaterializeUser(Frame frame, ref Quantum.DataContainer result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.DataContainer result, in PrototypeMaterializationContext context = default) {
        if (this.Data.Length == 0) {
          result.Data = default;
        } else {
          var dict = frame.AllocateDictionary(out result.Data, this.Data.Length);
          for (int i = 0; i < this.Data.Length; ++i) {
            Int32 tmpKey = default;
            Quantum.Variable tmpValue = default;
            tmpKey = this.Data[i].Key;
            this.Data[i].Value.Materialize(frame, ref tmpValue, in context);
            PrototypeValidator.AddToDictionary(dict, tmpKey, tmpValue, in context);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.FireBulletInfo))]
  public unsafe class FireBulletInfoPrototype : StructPrototype {
    public Quantum.Prototypes.BulletModelPrototype model;
    public Int32 speed;
    public Int32 duration;
    public Int32 timeCanHit;
    public Int32 hitTimes;
    public FPVector2 firePos;
    public FP fireAngle;
    public MapEntityId caster;
    public void Materialize(Frame frame, ref Quantum.FireBulletInfo result, in PrototypeMaterializationContext context = default) {
        this.model.Materialize(frame, ref result.model, in context);
        result.speed = this.speed;
        result.duration = this.duration;
        result.timeCanHit = this.timeCanHit;
        result.hitTimes = this.hitTimes;
        result.firePos = this.firePos;
        result.fireAngle = this.fireAngle;
        PrototypeValidator.FindMapEntity(this.caster, in context, out result.caster);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.ForceMoveComp))]
  public unsafe partial class ForceMoveCompPrototype : ComponentPrototype<Quantum.ForceMoveComp> {
    [AllocateOnComponentAdded()]
    [FreeOnComponentRemoved()]
    [HideInInspector()]
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.MovePreorderPrototype[] MovePreorder = {};
    partial void MaterializeUser(Frame frame, ref Quantum.ForceMoveComp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.ForceMoveComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.ForceMoveComp result, in PrototypeMaterializationContext context = default) {
        if (this.MovePreorder.Length == 0) {
          result.MovePreorder = default;
        } else {
          var list = frame.AllocateList(out result.MovePreorder, this.MovePreorder.Length);
          for (int i = 0; i < this.MovePreorder.Length; ++i) {
            Quantum.MovePreorder tmp = default;
            this.MovePreorder[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Gameplay))]
  public unsafe partial class GameplayPrototype : ComponentPrototype<Quantum.Gameplay> {
    [AllocateOnComponentAdded()]
    [FreeOnComponentRemoved()]
    [DictionaryAttribute()]
    [DynamicCollectionAttribute()]
    public DictionaryEntry_PlayerRef_PlayerData[] PlayerData = {};
    partial void MaterializeUser(Frame frame, ref Quantum.Gameplay result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Gameplay component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Gameplay result, in PrototypeMaterializationContext context = default) {
        if (this.PlayerData.Length == 0) {
          result.PlayerData = default;
        } else {
          var dict = frame.AllocateDictionary(out result.PlayerData, this.PlayerData.Length);
          for (int i = 0; i < this.PlayerData.Length; ++i) {
            PlayerRef tmpKey = default;
            Quantum.PlayerData tmpValue = default;
            tmpKey = this.PlayerData[i].Key;
            this.PlayerData[i].Value.Materialize(frame, ref tmpValue, in context);
            PrototypeValidator.AddToDictionary(dict, tmpKey, tmpValue, in context);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Input))]
  public unsafe partial class InputPrototype : StructPrototype {
    public FPVector2 MoveDirection;
    public FPVector2 AimDirection;
    public FP AimLength;
    public Button AttackPrepare;
    public Button Attack;
    public Button SkillPrepare;
    public Button Skill;
    public Button SuperSkillPrepare;
    public Button SuperSkill;
    public Button Cancel;
    partial void MaterializeUser(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context = default) {
        result.MoveDirection = this.MoveDirection;
        result.AimDirection = this.AimDirection;
        result.AimLength = this.AimLength;
        result.AttackPrepare = this.AttackPrepare;
        result.Attack = this.Attack;
        result.SkillPrepare = this.SkillPrepare;
        result.Skill = this.Skill;
        result.SuperSkillPrepare = this.SuperSkillPrepare;
        result.SuperSkill = this.SuperSkill;
        result.Cancel = this.Cancel;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.InputComp))]
  public unsafe partial class InputCompPrototype : ComponentPrototype<Quantum.InputComp> {
    [HideInInspector()]
    public Quantum.Prototypes.InputPrototype Input;
    partial void MaterializeUser(Frame frame, ref Quantum.InputComp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.InputComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.InputComp result, in PrototypeMaterializationContext context = default) {
        this.Input.Materialize(frame, ref result.Input, in context);
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KccComp))]
  public unsafe partial class KccCompPrototype : ComponentPrototype<Quantum.KccComp> {
    [HideInInspector()]
    public FPVector2 Velocity;
    public AssetRef<KccSettings> Settings;
    [HideInInspector()]
    public FP MaxSpeed;
    [HideInInspector()]
    public FP Acceleration;
    partial void MaterializeUser(Frame frame, ref Quantum.KccComp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.KccComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.KccComp result, in PrototypeMaterializationContext context = default) {
        result.Velocity = this.Velocity;
        result.Settings = this.Settings;
        result.MaxSpeed = this.MaxSpeed;
        result.Acceleration = this.Acceleration;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.MoveComp))]
  public unsafe partial class MoveCompPrototype : ComponentPrototype<Quantum.MoveComp> {
    [HideInInspector()]
    public FPVector2 Offset;
    [HideInInspector()]
    public FPVector2 Velocity;
    partial void MaterializeUser(Frame frame, ref Quantum.MoveComp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.MoveComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.MoveComp result, in PrototypeMaterializationContext context = default) {
        result.Offset = this.Offset;
        result.Velocity = this.Velocity;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.MovePreorder))]
  public unsafe partial class MovePreorderPrototype : StructPrototype {
    public FPVector2 vector;
    public Int32 totalFrame;
    public Int32 remainFrame;
    partial void MaterializeUser(Frame frame, ref Quantum.MovePreorder result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.MovePreorder result, in PrototypeMaterializationContext context = default) {
        result.vector = this.vector;
        result.totalFrame = this.totalFrame;
        result.remainFrame = this.remainFrame;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerComp))]
  public unsafe partial class PlayerCompPrototype : ComponentPrototype<Quantum.PlayerComp> {
    [HideInInspector()]
    public PlayerRef PlayerRef;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerComp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerComp result, in PrototypeMaterializationContext context = default) {
        result.PlayerRef = this.PlayerRef;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerData))]
  public unsafe partial class PlayerDataPrototype : StructPrototype {
    public PlayerRef PlayerRef;
    public FP RespawnTimer;
    public Int32 Kills;
    public Int32 Deaths;
    public Int32 LastKillFrame;
    public Int32 StatisticPosition;
    public QBoolean IsAlive;
    public QBoolean IsConnected;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerData result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.PlayerData result, in PrototypeMaterializationContext context = default) {
        result.PlayerRef = this.PlayerRef;
        result.RespawnTimer = this.RespawnTimer;
        result.Kills = this.Kills;
        result.Deaths = this.Deaths;
        result.LastKillFrame = this.LastKillFrame;
        result.StatisticPosition = this.StatisticPosition;
        result.IsAlive = this.IsAlive;
        result.IsConnected = this.IsConnected;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.RotateComp))]
  public unsafe partial class RotateCompPrototype : ComponentPrototype<Quantum.RotateComp> {
    [HideInInspector()]
    public FP Rotation;
    partial void MaterializeUser(Frame frame, ref Quantum.RotateComp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.RotateComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.RotateComp result, in PrototypeMaterializationContext context = default) {
        result.Rotation = this.Rotation;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SBulletFireInfoComp))]
  public unsafe class SBulletFireInfoCompPrototype : ComponentPrototype<Quantum.SBulletFireInfoComp> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.SBulletFireInfoComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.SBulletFireInfoComp result, in PrototypeMaterializationContext context = default) {
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SCreateAoeInfoComp))]
  public unsafe class SCreateAoeInfoCompPrototype : ComponentPrototype<Quantum.SCreateAoeInfoComp> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.SCreateAoeInfoComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.SCreateAoeInfoComp result, in PrototypeMaterializationContext context = default) {
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SDamageInfoComp))]
  public unsafe class SDamageInfoCompPrototype : ComponentPrototype<Quantum.SDamageInfoComp> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.SDamageInfoComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.SDamageInfoComp result, in PrototypeMaterializationContext context = default) {
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SSkillModelContainerComp))]
  public unsafe class SSkillModelContainerCompPrototype : ComponentPrototype<Quantum.SSkillModelContainerComp> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.SSkillModelContainerComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.SSkillModelContainerComp result, in PrototypeMaterializationContext context = default) {
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.STimelineComp))]
  public unsafe class STimelineCompPrototype : ComponentPrototype<Quantum.STimelineComp> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.STimelineComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.STimelineComp result, in PrototypeMaterializationContext context = default) {
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.STimelineModelContainerComp))]
  public unsafe class STimelineModelContainerCompPrototype : ComponentPrototype<Quantum.STimelineModelContainerComp> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.STimelineModelContainerComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.STimelineModelContainerComp result, in PrototypeMaterializationContext context = default) {
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SkillComp))]
  public unsafe class SkillCompPrototype : ComponentPrototype<Quantum.SkillComp> {
    [AllocateOnComponentAdded()]
    [FreeOnComponentRemoved()]
    [HideInInspector()]
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.SkillObjPrototype[] Skills = {};
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.SkillComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.SkillComp result, in PrototypeMaterializationContext context = default) {
        if (this.Skills.Length == 0) {
          result.Skills = default;
        } else {
          var list = frame.AllocateList(out result.Skills, this.Skills.Length);
          for (int i = 0; i < this.Skills.Length; ++i) {
            Quantum.SkillObj tmp = default;
            this.Skills[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SkillModel))]
  public unsafe class SkillModelPrototype : StructPrototype {
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.AttributeCostPrototype[] attrCosts = {};
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.AddBuffInfoPrototype[] addBuffs = {};
    public Int32 id;
    public Int32 cd;
    public Int32 type;
    public Int32 condition;
    public Int32 timelineModelId;
    public QBoolean canInterrupt;
    public QBoolean canLearnMulti;
    public Int32 indicatorType;
    public Int32 indicatorMaxRange;
    public Int32 indicatorRadius;
    public Int32 indicatorArc;
    public Int32 indicatorWidth;
    public Int32 indicatorScatter;
    public void Materialize(Frame frame, ref Quantum.SkillModel result, in PrototypeMaterializationContext context = default) {
        if (this.attrCosts.Length == 0) {
          result.attrCosts = default;
        } else {
          var list = frame.AllocateList(out result.attrCosts, this.attrCosts.Length);
          for (int i = 0; i < this.attrCosts.Length; ++i) {
            Quantum.AttributeCost tmp = default;
            this.attrCosts[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
        if (this.addBuffs.Length == 0) {
          result.addBuffs = default;
        } else {
          var list = frame.AllocateList(out result.addBuffs, this.addBuffs.Length);
          for (int i = 0; i < this.addBuffs.Length; ++i) {
            Quantum.AddBuffInfo tmp = default;
            this.addBuffs[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
        result.id = this.id;
        result.cd = this.cd;
        result.type = this.type;
        result.condition = this.condition;
        result.timelineModelId = this.timelineModelId;
        result.canInterrupt = this.canInterrupt;
        result.canLearnMulti = this.canLearnMulti;
        result.indicatorType = this.indicatorType;
        result.indicatorMaxRange = this.indicatorMaxRange;
        result.indicatorRadius = this.indicatorRadius;
        result.indicatorArc = this.indicatorArc;
        result.indicatorWidth = this.indicatorWidth;
        result.indicatorScatter = this.indicatorScatter;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SkillObj))]
  public unsafe class SkillObjPrototype : StructPrototype {
    public Quantum.Prototypes.SkillModelPrototype model;
    public Int32 level;
    public Int32 cd;
    public Int32 refCount;
    public void Materialize(Frame frame, ref Quantum.SkillObj result, in PrototypeMaterializationContext context = default) {
        this.model.Materialize(frame, ref result.model, in context);
        result.level = this.level;
        result.cd = this.cd;
        result.refCount = this.refCount;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.StatsComp))]
  public unsafe partial class StatsCompPrototype : ComponentPrototype<Quantum.StatsComp> {
    [HideInInspector()]
    public QBoolean IsInit;
    [HideInInspector()]
    public Int32 Hp;
    [HideInInspector()]
    public Int32 Mp;
    [HideInInspector()]
    public Int32 Defence;
    [HideInInspector()]
    public Int32 AttackClip;
    [HideInInspector()]
    public Int32 SuperPower;
    [HideInInspector()]
    public Int32 CanUseSkill;
    [HideInInspector()]
    public Int32 CanMove;
    [HideInInspector()]
    public Int32 CanRotate;
    [HideInInspector()]
    public Int32 IsImmune;
    partial void MaterializeUser(Frame frame, ref Quantum.StatsComp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.StatsComp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.StatsComp result, in PrototypeMaterializationContext context = default) {
        result.IsInit = this.IsInit;
        result.Hp = this.Hp;
        result.Mp = this.Mp;
        result.Defence = this.Defence;
        result.AttackClip = this.AttackClip;
        result.SuperPower = this.SuperPower;
        result.CanUseSkill = this.CanUseSkill;
        result.CanMove = this.CanMove;
        result.CanRotate = this.CanRotate;
        result.IsImmune = this.IsImmune;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TLNode))]
  public unsafe class TLNodePrototype : UnionPrototype {
    public string _field_used_;
    public Quantum.Prototypes.TLNode_LogPrototype Log;
    public Quantum.Prototypes.TLNode_AddBuffToCasterPrototype AddBuffToCaster;
    public Quantum.Prototypes.TLNode_PlayAnimPrototype PlayAnim;
    public Quantum.Prototypes.TLNode_FireBulletPrototype FireBullet;
    public Quantum.Prototypes.TLNode_CreateAoePrototype CreateAoe;
    public void Materialize(Frame frame, ref Quantum.TLNode result, in PrototypeMaterializationContext context = default) {
        switch (_field_used_) {
          case "LOG": this.Log.Materialize(frame, ref *result.Log, in context); break;
          case "ADDBUFFTOCASTER": this.AddBuffToCaster.Materialize(frame, ref *result.AddBuffToCaster, in context); break;
          case "PLAYANIM": this.PlayAnim.Materialize(frame, ref *result.PlayAnim, in context); break;
          case "FIREBULLET": this.FireBullet.Materialize(frame, ref *result.FireBullet, in context); break;
          case "CREATEAOE": this.CreateAoe.Materialize(frame, ref *result.CreateAoe, in context); break;
          case "": case null: break;
          default: PrototypeValidator.UnknownUnionField(_field_used_, in context); break;
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TLNode_AddBuffToCaster))]
  public unsafe class TLNode_AddBuffToCasterPrototype : StructPrototype {
    public Quantum.Prototypes.AddBuffInfoPrototype addBuffInfo;
    public void Materialize(Frame frame, ref Quantum.TLNode_AddBuffToCaster result, in PrototypeMaterializationContext context = default) {
        this.addBuffInfo.Materialize(frame, ref result.addBuffInfo, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TLNode_CreateAoe))]
  public unsafe class TLNode_CreateAoePrototype : StructPrototype {
    public Quantum.Prototypes.CreateAoeInfoPrototype createAoeInfo;
    public void Materialize(Frame frame, ref Quantum.TLNode_CreateAoe result, in PrototypeMaterializationContext context = default) {
        this.createAoeInfo.Materialize(frame, ref result.createAoeInfo, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TLNode_FireBullet))]
  public unsafe class TLNode_FireBulletPrototype : StructPrototype {
    public Quantum.Prototypes.FireBulletInfoPrototype fireBulletInfo;
    public void Materialize(Frame frame, ref Quantum.TLNode_FireBullet result, in PrototypeMaterializationContext context = default) {
        this.fireBulletInfo.Materialize(frame, ref result.fireBulletInfo, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TLNode_Log))]
  public unsafe partial class TLNode_LogPrototype : StructPrototype {
    [MaxStringByteCount(62, "Unicode")]
    public string content;
    partial void MaterializeUser(Frame frame, ref Quantum.TLNode_Log result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.TLNode_Log result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.AssignQString(this.content, 64, in context, out result.content);
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TLNode_PlayAnim))]
  public unsafe partial class TLNode_PlayAnimPrototype : StructPrototype {
    public Int32 animKey;
    public QBoolean force;
    partial void MaterializeUser(Frame frame, ref Quantum.TLNode_PlayAnim result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.TLNode_PlayAnim result, in PrototypeMaterializationContext context = default) {
        result.animKey = this.animKey;
        result.force = this.force;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TimelineModel))]
  public unsafe class TimelineModelPrototype : StructPrototype {
    public Int32 id;
    public Int32 totalFrame;
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.TimelineNodePrototype[] nodes = {};
    public void Materialize(Frame frame, ref Quantum.TimelineModel result, in PrototypeMaterializationContext context = default) {
        result.id = this.id;
        result.totalFrame = this.totalFrame;
        if (this.nodes.Length == 0) {
          result.nodes = default;
        } else {
          var list = frame.AllocateList(out result.nodes, this.nodes.Length);
          for (int i = 0; i < this.nodes.Length; ++i) {
            Quantum.TimelineNode tmp = default;
            this.nodes[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TimelineNode))]
  public unsafe class TimelineNodePrototype : StructPrototype {
    public Int32 frame;
    public Quantum.Prototypes.DataContainerPrototype args;
    public Quantum.QEnum32<ETLNodeType> nodeType;
    public Quantum.Prototypes.TLNodePrototype node;
    public void Materialize(Frame frame, ref Quantum.TimelineNode result, in PrototypeMaterializationContext context = default) {
        result.frame = this.frame;
        this.args.Materialize(frame, ref result.args, in context);
        result.nodeType = this.nodeType;
        this.node.Materialize(frame, ref result.node, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TimelineObj))]
  public unsafe class TimelineObjPrototype : StructPrototype {
    public Quantum.Prototypes.TimelineModelPrototype model;
    public MapEntityId caster;
    public Int32 elapsedFrame;
    public void Materialize(Frame frame, ref Quantum.TimelineObj result, in PrototypeMaterializationContext context = default) {
        this.model.Materialize(frame, ref result.model, in context);
        PrototypeValidator.FindMapEntity(this.caster, in context, out result.caster);
        result.elapsedFrame = this.elapsedFrame;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Variable))]
  public unsafe partial class VariablePrototype : UnionPrototype {
    public string _field_used_;
    public Int32 i;
    public FP f;
    [MaxStringByteCount(62, "Unicode")]
    public string str;
    public FPVector2 vec2;
    public FPVector3 vec3;
    [UnitAttribute(Units.Degrees)]
    public FPVector3 quat;
    partial void MaterializeUser(Frame frame, ref Quantum.Variable result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.Variable result, in PrototypeMaterializationContext context = default) {
        switch (_field_used_) {
          case "I": *result.i = this.i; break;
          case "F": *result.f = this.f; break;
          case "STR": PrototypeValidator.AssignQString(this.str, 64, in context, out *result.str); break;
          case "VEC2": *result.vec2 = this.vec2; break;
          case "VEC3": *result.vec3 = this.vec3; break;
          case "QUAT": *result.quat = FPQuaternion.Euler(this.quat); break;
          case "": case null: break;
          default: PrototypeValidator.UnknownUnionField(_field_used_, in context); break;
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
