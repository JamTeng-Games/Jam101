// 玩家组件
component PlayerComp
{
    [HideInInspector]
    player_ref PlayerRef;
}

// 角色当前状态值
component StatsComp
{
    [HideInInspector] bool IsInit;    // 是否初始化
    [HideInInspector] int Hp;         // 血量
    [HideInInspector] int Mp;         // 蓝量
    [HideInInspector] int Defence;    // 护甲
    [HideInInspector] int AttackClip; // 普通攻击弹夹数
    [HideInInspector] int SuperPower; // 大招能量条
    // 控制状态
    [HideInInspector] int CanUseSkill; // 是否可以使用技能 (ref count)
    [HideInInspector] int CanMove;     // 是否可以移动 (ref count)
    [HideInInspector] int CanRotate;   // 是否可以旋转 (ref count)
    [HideInInspector] int IsImmune;    // 无敌 (ref count)
}

// 属性组件
component AttribComp
{
    // 所有属性都是由Buff给的
    // 基础属性 index 对应 AttributeType -> value
    [AllocateOnComponentAdded, FreeOnComponentRemoved, HideInInspector]
    dictionary<int, int> ValueAttribs;
    // 百分比加成 index 对应 AttributeType -> value
    [AllocateOnComponentAdded, FreeOnComponentRemoved, HideInInspector]
    dictionary<int, FP> PercentAttribs;
}

// 位移组件
component MoveComp
{
    [HideInInspector] FPVector2 Offset;
    [HideInInspector] FPVector2 Velocity;
}

// 旋转组件
component RotateComp
{
    [HideInInspector] FP Rotation;
}

// KCC
component KccComp
{
    [HideInInspector] FPVector2 Velocity;
    asset_ref<KccSettings> Settings;
    [HideInInspector] FP MaxSpeed;
    [HideInInspector] FP Acceleration;
}

// 强制位移组件
component ForceMoveComp
{
    [AllocateOnComponentAdded, FreeOnComponentRemoved, HideInInspector]
    list<MovePreorder> MovePreorder;
}

// Skill
component SkillComp
{
    [AllocateOnComponentAdded, FreeOnComponentRemoved, HideInInspector]
    list<SkillObj> Skills;
}

// Buff
component BuffComp
{
    bool isDirty;
    [AllocateOnComponentAdded, FreeOnComponentRemoved, HideInInspector]
    list<BuffObj> Buffs;
    [AllocateOnComponentAdded, FreeOnComponentRemoved, HideInInspector]
    list<AddBuffInfo> AddBuffs;
}

// Bullet
component BulletComp
{
    [HideInInspector] BulletModel Model;
    [HideInInspector] int Hp;             // 还能命中几次
    [HideInInspector] int ElapsedFrame;   // 已经过去的帧数
    [HideInInspector] int RemainFrame;    // 剩余帧数
    [HideInInspector] int TimeCanHit;     // 多少帧后可以击中
    [HideInInspector] FP Speed;           // 速度

    [HideInInspector] entity_ref Caster;  // 释放者

    [AllocateOnComponentAdded, FreeOnComponentRemoved, HideInInspector]
    list<BulletHitRecord> HitRecords;   // 击中记录
}

// Aoe
component AoeComp
{
    [HideInInspector] AoeModel Model;
    [HideInInspector] int ElapsedFrame;   // 已经过去的帧数
    [HideInInspector] int RemainFrame;    // 剩余帧数
    [HideInInspector] int TickTime;       // 间隔多少帧tick一次
    [HideInInspector] FP Speed;           // 速度
    [HideInInspector] FP Radius;          // 半径
    [HideInInspector] entity_ref Caster;  // 释放者

    [AllocateOnComponentAdded, FreeOnComponentRemoved, HideInInspector]
    list<AoeEntityRecord> entityInArea;   // Aoe范围内的单位
    [AllocateOnComponentAdded, FreeOnComponentRemoved, HideInInspector]
    list<AoeEntityRecord> bulletInArea;   // Aoe范围内的子弹
}


// Camp
component CampComp
{
    [HideInInspector] int Camp;
}