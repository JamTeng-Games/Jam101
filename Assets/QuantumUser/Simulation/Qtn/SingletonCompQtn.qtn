singleton component Gameplay
{
    [AllocateOnComponentAdded, FreeOnComponentRemoved]
    dictionary<PlayerRef, PlayerData> PlayerData;
}

// Skill
singleton component SSkillModelContainerComp
{
    // Skill id -> Skill
    [ExcludeFromPrototype]
    dictionary<int, SkillModel> Models;
}

// Timeline
singleton component STimelineModelContainerComp
{
    // Timeline id -> Timeline
//   [AllocateOnComponentAdded, FreeOnComponentRemoved, ExcludeFromPrototype]
    [ExcludeFromPrototype]
    dictionary<int, TimelineModel> Models;
}

singleton component STimelineComp
{
//    [ExcludeFromPrototype]
    [AllocateOnComponentAdded, FreeOnComponentRemoved, ExcludeFromPrototype]
    list<TimelineObj> Timelines;
}

//// Buff
//singleton component SBuffModelContainerComp
//{
//    // Buff id -> Buff
////   [AllocateOnComponentAdded, FreeOnComponentRemoved, ExcludeFromPrototype]
//    [ExcludeFromPrototype]
//    dictionary<int, BuffModel> Models;
//}

// Damage
singleton component SDamageInfoComp
{
    // Damage id -> Damage
    [AllocateOnComponentAdded, FreeOnComponentRemoved, ExcludeFromPrototype]
    list<DamageInfo> DamageInfos;
}

// 保存发射子弹的信息
singleton component SBulletFireInfoComp
{
// Damage id -> Damage
    [AllocateOnComponentAdded, FreeOnComponentRemoved, ExcludeFromPrototype]
    list<FireBulletInfo> FireBulletInfos;
}

// 保存发射Aoe的信息
singleton component SCreateAoeInfoComp
{
// Damage id -> Damage
    [AllocateOnComponentAdded, FreeOnComponentRemoved, ExcludeFromPrototype]
    list<CreateAoeInfo> CreateAoeInfos;
}